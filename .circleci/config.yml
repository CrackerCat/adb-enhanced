# Python CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-python/ for more details
#
version: 2

jobs:
  build:
    docker:
      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      - image: circleci/android:api-28-alpha
        environment:
          JVM_OPTS: -Xmx3200m
      # specify the version you desire here
      # use `-browsers` prefix for selenium tests, e.g. `3.6.1-browsers`
      - image: circleci/python:3.7.0
      

    working_directory: ~/adb-enhanced-code-checkout-directory

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "requirements.txt" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run:
          name: install Python dependencies
          command: |
            sudo apt-get install python3
            sudo apt-get install python3-pip
            sudo apt-get install python3-venv
            python3 -m venv venv
            . venv/bin/activate
            pip3 install -r requirements.txt

      - run:
          name: Setup Android emulator
          command: |
            # echo "Listing of /opt/android/sdk"
            # ls /opt/android/sdk
            sdkmanager "system-images;android-22;default;armeabi-v7a" && echo "no" | avdmanager create avd -n test -k "system-images;android-22;default;armeabi-v7a"

      - save_cache:
          paths:
            - ./venv
          key: v1-dependencies-{{ checksum "requirements.txt" }}

      - run:
          name: Launch emulator
          command: export LD_LIBRARY_PATH=${ANDROID_HOME}/emulator/lib64:${ANDROID_HOME}/emulator/lib64/qt/lib && emulator64-arm -avd test -noaudio -no-boot-anim -no-window -accel on
          background: true
        
      - run:
          name: run tests
          command: |
            circle-android wait-for-boot
            python3 -m venv venv
            . venv/bin/activate

            # Some things to test
            python3 adbe.py apps list all
            python3 adbe.py app-signature com.android.phone
            python3 adbe.py app-info com.android.phone
            python3 adbe.py screenshot tmp1.png -v
